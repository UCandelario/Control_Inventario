Candelario Sanchez Ulises Ramses
Granados Davalos Diego Jose

-- Crear la base de datos
CREATE DATABASE mi_tiendita;

-- Seleccionar la base de datos
USE mi_tiendita;

-- Crear la tabla de usuarios
CREATE TABLE usuarios (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    rol ENUM('cliente', 'admin') DEFAULT 'cliente',
    fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Crear la tabla de productos
CREATE TABLE productos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    descripcion TEXT,
    precio DECIMAL(10, 2) NOT NULL,
    stock INT NOT NULL DEFAULT 0,
    fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    fecha_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Crear la tabla de pedidos
CREATE TABLE pedidos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_usuario INT,
    fecha_pedido TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    total DECIMAL(10, 2) NOT NULL DEFAULT 0,
    FOREIGN KEY (id_usuario) REFERENCES usuarios(id) ON DELETE CASCADE
);

-- Crear la tabla de detalles de pedidos
CREATE TABLE detallespedidos (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_pedido INT,
    id_producto INT,
    cantidad INT NOT NULL,
    precio DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (id_pedido) REFERENCES pedidos(id) ON DELETE CASCADE,
    FOREIGN KEY (id_producto) REFERENCES productos(id) ON DELETE CASCADE
);

--Crear la tabla Carrito de productos
CREATE TABLE Carrito (
    id INT AUTO_INCREMENT PRIMARY KEY,
    id_usuario INT NOT NULL,
    id_producto INT NOT NULL,
    cantidad INT NOT NULL,
    FOREIGN KEY (id_usuario) REFERENCES Usuarios(id),
    FOREIGN KEY (id_producto) REFERENCES Productos(id)
);


-- Trigger para disminuir el stock de productos cuando se inserta un nuevo detalle de pedido
CREATE TRIGGER actualizar_stock_disminuir
AFTER INSERT ON detallespedidos
FOR EACH ROW
BEGIN
    UPDATE productos SET stock = stock - NEW.cantidad WHERE id = NEW.id_producto;
END$$

-- Trigger para aumentar el stock de productos cuando se elimina un detalle de pedido
CREATE TRIGGER actualizar_stock_aumentar
AFTER DELETE ON detallespedidos
FOR EACH ROW
BEGIN
    UPDATE Productos SET stock = stock + OLD.cantidad WHERE id = OLD.id_producto;
END$$


-- Creacion de el usuario administrador
INSERT INTO usuarios (nombre, email, password, rol) 
VALUES ('Admin', 'admin@mitiendita.com', SHA2('admin_password', 256), 'admin');